#version 450
#define LOCAL_SZ_X 1024
layout(push_constant) uniform pushBlock {
    int dim;
    int input_size_x;
    int input_size_y;
    int input_size_z;
    int kernel_size_x;
    int kernel_size_y;
    int kernel_size_z;
    int stride_x;
    int stride_y;
    int stride_z;
    int dialation_x;
    int dialation_y;
    int dialation_z;
    int padding_x;
    int padding_y;
    int padding_z;
    int output_x;
    int output_y;
    int ouptut_z;
    int padding_type;
} p;

layout(binding = 0) readonly buffer buf1 {
    float A[];
};

layout(binding = 1) readonly buffer buf2 {
	float B[];	
};

layout(binding = 2) writeonly buffer buf3 {
    float C[];
};

//0: zero
//1: same

layout(local_size_x = LOCAL_SZ_X, local_size_y = 1, local_size_z = 1) in;

void main()
{     
    switch(p.dim){
        case 1:
        for (int i = int(gl_GlobalInvocationID.x); i < p.input_size_x; i += int(gl_NumWorkGroups.x * gl_WorkGroupSize.x))
        {
            float val = A[i];
            for(int j = 0; j < kernel_size_x; ++j){
                int out = i + j;
                if(out > 0 && out < output_x)
                    C[out] += B[j] * A[i];
            }
        }
        break;
    };
}