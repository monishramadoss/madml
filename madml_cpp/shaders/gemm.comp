#version 450

layout(push_constant) uniform pushBlock {
      int M;
      int N;
      int K;
} p;

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout (binding = 0) readonly buffer ssbA {
  float A[];
};
layout (binding = 1) readonly buffer ssbB {
  float B[];
};
layout (binding = 2) writeonly buffer ssbC {
  float C[];
};

void main() {
    int M = p.M;
    int N = p.N;
    int K = p.K;
    uint globalRow = gl_GlobalInvocationID.x; // Row ID of C (0..M)
    uint globalK = gl_GlobalInvocationID.y; // Col ID of C (0..K)
    if(globalRow > M || globalK > K)
	    return;
    // Compute a single element (loop over N)
    float acc = 0.0;
    for (uint n=0u; n < N; n++){
        acc += A[globalK*M + globalRow] * B[n*K + globalK];
        C[n*M + globalRow] = acc;
    }
    // Store the result
}